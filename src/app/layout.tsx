import type { Metadata } from "next";
import {
  Inter,
  Lato,
  Open_Sans,
  Poppins,
  Raleway,
  Roboto,
} from "next/font/google";
import "./globals.css";
import NextAuthProvider from "../components/providers/nextauth-provider";
import { ThemeProvider } from "@/components/providers/theme-provider";
import { cn } from "@/lib/utils";

import { Plus_Jakarta_Sans } from "next/font/google";
const inter = Inter({ subsets: ["latin"], variable: "--font-inter" });
const fontSans = Plus_Jakarta_Sans({
  subsets: ["latin"],
  weight: ["300", "400", "500", "600", "700"],
  variable: "--font-sans",
});
const roboto = Roboto({
  subsets: ["cyrillic"],
  weight: ["100", "300", "400", "500", "700", "900"],
  variable: "--font-roboto",
});
const openSans = Open_Sans({
  subsets: ["cyrillic"],
  weight: ["300", "400", "500", "600", "700", "800"],
  variable: "--font-openSans",
});
const poppins = Poppins({
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
  variable: "--font-poppins",
});
const lato = Lato({
  subsets: ["latin"],
  weight: ["100", "300", "400", "700", "900"],
  variable: "--font-lato",
});
const raleway = Raleway({
  subsets: ["cyrillic"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
  variable: "--font-raleway",
});
export const metadata: Metadata = {
  title: "codebits",
  description: "Generated by create next app",
};
import { Toaster } from "sonner";
import SWRProvider from "@/components/providers/swr-provider";
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className="dark">
      <body
        // className={`font-sans antialiased ${fontSans.variable} ${roboto.variable} ${inter.variable} ${poppins.variable} ${openSans.variable} ${lato.variable} ${raleway.variable}`}
        className={cn("font-sans antialiased", fontSans.variable)}
      >
        <ThemeProvider attribute="class" defaultTheme="dark">
          <Toaster position="top-right" closeButton richColors />
          <NextAuthProvider>
            <SWRProvider>{children}</SWRProvider>
          </NextAuthProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
